#!/bin/bash

PICNIC_IMG="mfschmidt/picnic:latest"

# Provide usage instructions
function usage {
  echo "Usage for run_picnic_in_docker"
  echo ""
  echo "    You can 'run_picnic_in_docker --help' for usage, or"
  echo ""
  echo "    run_picnic_in_docker /input/input_deck.inp /host/path/to/input_path /host/path/to/output_path "
  echo ""
  echo "'input_deck'  The text file (path as mounted inside docker) specifying"
  echo "              the pipeline to run. This is usually named *.inp"
  echo "              You can create an input deck with PICNIC's pantry.py GUI."
  echo "              Paths in the input deck will not be rewritten to match"
  echo "              the docker volume mounts. This argument should be specified "
  echo "              as the path visible from inside the docker container, "
  echo "              probably starting with /input/ or /output/."
  echo ""
  echo "'input_path'  The path (as mounted on host) to your input data"
  echo "              This will be safely mounted read-only."
  echo "              Paths in the input deck should be within this input_path,"
  echo "              and docker will use this path to match its volume mounts."
  echo "              If a participant's input data are at /home/username/pet_data/sub-01,"
  echo "              you would use /home/username/pet_data as your input_path, "
  echo "              then specify /input/sub-01/... inside input_deck.inp."
  echo ""
  echo "'output_path' The path (as mounted on host) where PICNIC will write results"
  echo "              See input_path for how to structure host vs docker paths."
  echo "              This should obviously be writable."
  echo ""
}

# Handle completely naive or errant input
if [[ -z "${1}" ]]; then
  echo -e "${RED}"
  echo "No arguments were provided. You can build one with 'pantry.py'."
  echo -e "${NC}"
  usage
  exit 1
elif [[ ${1} == *"help" ]]; then
  usage
  exit 1
fi

INPUT_DECK="${1}"
INPUT_DIR="${2}"
OUTPUT_DIR="${3}"
for FS_LICENSE in \
"/opt/freesurfer/license.txt" \
"/usr/local/freesurfer/license.txt" \
"/data/freesurfer/license.txt" \
"${HOME}/freesurfer/license.txt" \
"/minddata/home_on_aws/mschmid/freesurfer/license.txt"; do
  if [[ -f "$FS_LICENSE" ]]; then
    break
  fi
done
if [[ ! -f "$FS_LICENSE" ]]; then
  echo "No FreeSurfer license can be found. Please edit this script to help locate it."
  exit 1
fi

echo "Running from '${INPUT_DIR}' to '${OUTPUT_DIR}', "
echo "  guided by '${INPUT_DECK}'"
echo "  using FreeSurfer license at '${FS_LICENSE}'."

# Execute the input deck in docker
HOST_NAME=$(hostname)
export HOST_NAME
docker run -it \
  --env "HOST_NAME" \
  --mount "type=bind,\"src=${INPUT_DIR}\",\"dst=/input\",ro" \
  --mount "type=bind,\"src=${OUTPUT_DIR}\",\"dst=/output\"" \
  --mount "type=bind,\"src=${INPUT_DECK}\",\"dst=/input_deck.inp\"" \
  --mount "type=bind,\"src=${FS_LICENSE}\",\"dst=/opt/freesurfer/license.txt\",ro" \
  ${PICNIC_IMG} /input_deck.inp
